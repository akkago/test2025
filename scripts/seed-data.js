const pool = require('../config/database');

async function seedData() {
  try {
    console.log('üå± –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');

    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è
    const events = [
      { name: '–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', total_seats: 100 },
      { name: '–í–æ—Ä–∫—à–æ–ø –ø–æ –º–∞—à–∏–Ω–Ω–æ–º—É –æ–±—É—á–µ–Ω–∏—é', total_seats: 50 },
      { name: '–°–µ–º–∏–Ω–∞—Ä –ø–æ –±–ª–æ–∫—á–µ–π–Ω—É', total_seats: 30 }
    ];

    for (const event of events) {
      const result = await pool.query(
        'INSERT INTO events (name, total_seats) VALUES ($1, $2) RETURNING id',
        [event.name, event.total_seats]
      );
      console.log(`‚úÖ –°–æ–±—ã—Ç–∏–µ "${event.name}" —Å–æ–∑–¥–∞–Ω–æ —Å ID: ${result.rows[0].id}`);
    }

    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await pool.end();
  }
}

seedData();
